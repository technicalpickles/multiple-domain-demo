<%
  @path = "/etc/apache2/sites-available/#{rubber_env.app_name}-passenger"
  @post = "a2enmod rewrite && a2enmod ssl && a2ensite #{rubber_env.app_name}-passenger"
%>

<% [rubber_env.passenger_listen_port, rubber_env.passenger_listen_ssl_port].each do |port| %>

Listen <%= port %>
<VirtualHost *:<%= port %>>
  ServerName      <%= rubber_env.domain %>
<%- if rubber_env.web_aliases -%>
  ServerAlias	    <%= rubber_env.web_aliases.join(" ") %>
<%- end -%>
  DocumentRoot    <%= RUBBER_ROOT + "/public" %>

  ErrorDocument 404 /404.html
  ErrorDocument 500 /500.html

  SetEnvIf User-Agent "^(.*MSIE.*)|(.*AppleWebKit.*)$" nokeepalive

  RailsEnv  <%= RUBBER_ENV %>
  RailsAllowModRewrite on

  RewriteEngine On
  RewriteCond %{HTTP_HOST} ^<%= rubber_env.domain %>$
  RewriteRule ^(.*)$ http://www.<%= rubber_env.domain %>$1 [R,L]

  # Include <%= RUBBER_ROOT %>/config/apache/rewrites.conf

  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html  
  RewriteRule ^.*$ /system/maintenance.html [L]
  
  <% if port == rubber_env.passenger_listen_ssl_port %>
  SSLEngine on
  SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
  SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem
  SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
  # SSLCertificateFile <%= RUBBER_ROOT %>/config/<%= rubber_env.domain %>.crt
  # SSLCertificateKeyFile <%= RUBBER_ROOT %>/config/<%= rubber_env.domain %>.key
  # SSLCertificateChainFile /etc/ssl/certs/gd_intermediate_bundle.crt
  <% end %>

</VirtualHost>

<% end %>